// <auto-generated />
using System;
using Animalink.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Animalink.Data.Migrations
{
    [DbContext(typeof(AnimalinkDBContext))]
    partial class AnimalinkDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Animalink.Data.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e68353ea-91fb-4a2e-b29e-b75c10defa4f"),
                            CreatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 375, DateTimeKind.Utc).AddTicks(3110),
                            IsDeleted = false,
                            Password = "123456",
                            UpdatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 375, DateTimeKind.Utc).AddTicks(3106),
                            UserName = "Admin1"
                        },
                        new
                        {
                            Id = new Guid("27ec8ca0-d392-418a-958b-082205ad701e"),
                            CreatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 375, DateTimeKind.Utc).AddTicks(4285),
                            IsDeleted = false,
                            Password = "1!_X+*´~ _",
                            UpdatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 375, DateTimeKind.Utc).AddTicks(4280),
                            UserName = "Admin2"
                        });
                });

            modelBuilder.Entity("Animalink.Data.AdminStatistic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Statistic")
                        .HasColumnType("varchar(8000)");

                    b.Property<string>("StatisticType")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AdminStatistics");

                    b.HasData(
                        new
                        {
                            Id = new Guid("38c185a7-fe3c-4de7-8409-4cf04d0463f7"),
                            AdminId = new Guid("e68353ea-91fb-4a2e-b29e-b75c10defa4f"),
                            CreatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 375, DateTimeKind.Utc).AddTicks(5302),
                            IsDeleted = false,
                            Statistic = "",
                            StatisticType = "Total Number of NFTs",
                            UpdatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 375, DateTimeKind.Utc).AddTicks(5296)
                        },
                        new
                        {
                            Id = new Guid("098eca0d-9284-4384-8633-59eb8c4169ac"),
                            AdminId = new Guid("e68353ea-91fb-4a2e-b29e-b75c10defa4f"),
                            CreatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 375, DateTimeKind.Utc).AddTicks(7402),
                            IsDeleted = false,
                            Statistic = "",
                            StatisticType = "Total Number of NFTs Sold",
                            UpdatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 375, DateTimeKind.Utc).AddTicks(7397)
                        },
                        new
                        {
                            Id = new Guid("ccfafa89-ed9c-4890-bce5-d61c4e393ea4"),
                            AdminId = new Guid("e68353ea-91fb-4a2e-b29e-b75c10defa4f"),
                            CreatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 375, DateTimeKind.Utc).AddTicks(7449),
                            IsDeleted = false,
                            Statistic = "",
                            StatisticType = "Total Value Made",
                            UpdatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 375, DateTimeKind.Utc).AddTicks(7448)
                        },
                        new
                        {
                            Id = new Guid("5c237644-fff5-457d-b15f-f92f37fe855a"),
                            AdminId = new Guid("e68353ea-91fb-4a2e-b29e-b75c10defa4f"),
                            CreatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 375, DateTimeKind.Utc).AddTicks(7455),
                            IsDeleted = false,
                            Statistic = "",
                            StatisticType = "Total Number of Animals",
                            UpdatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 375, DateTimeKind.Utc).AddTicks(7454)
                        },
                        new
                        {
                            Id = new Guid("e2dd3214-a9e8-4be7-927c-a69e1907487f"),
                            AdminId = new Guid("e68353ea-91fb-4a2e-b29e-b75c10defa4f"),
                            CreatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 375, DateTimeKind.Utc).AddTicks(7460),
                            IsDeleted = false,
                            Statistic = "",
                            StatisticType = "Total Number of Species",
                            UpdatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 375, DateTimeKind.Utc).AddTicks(7459)
                        },
                        new
                        {
                            Id = new Guid("93e801c5-2260-4440-8dbe-d4e3c041780b"),
                            AdminId = new Guid("e68353ea-91fb-4a2e-b29e-b75c10defa4f"),
                            CreatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 375, DateTimeKind.Utc).AddTicks(7464),
                            IsDeleted = false,
                            Statistic = "",
                            StatisticType = "Total Value Donated",
                            UpdatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 375, DateTimeKind.Utc).AddTicks(7464)
                        },
                        new
                        {
                            Id = new Guid("65e3ce19-4ceb-45bd-8cf1-2244ae50c6b4"),
                            AdminId = new Guid("e68353ea-91fb-4a2e-b29e-b75c10defa4f"),
                            CreatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 375, DateTimeKind.Utc).AddTicks(7469),
                            IsDeleted = false,
                            Statistic = "",
                            StatisticType = "Value Donated by Partner",
                            UpdatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 375, DateTimeKind.Utc).AddTicks(7468)
                        },
                        new
                        {
                            Id = new Guid("60da0227-dd8e-446a-b294-8a6de324c510"),
                            AdminId = new Guid("e68353ea-91fb-4a2e-b29e-b75c10defa4f"),
                            CreatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 375, DateTimeKind.Utc).AddTicks(7473),
                            IsDeleted = false,
                            Statistic = "",
                            StatisticType = " Total Number of Users ",
                            UpdatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 375, DateTimeKind.Utc).AddTicks(7472)
                        });
                });

            modelBuilder.Entity("Animalink.Data.Animal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnimalName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Habitat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IUCN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IUCNAcronym")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Species")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Taxonomy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Animals");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a76492d7-f83b-465f-bbd6-de0338a284ab"),
                            AnimalName = "Tiger",
                            CreatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 371, DateTimeKind.Utc).AddTicks(8682),
                            Habitat = "Sumatra",
                            IUCN = "Endangered",
                            IUCNAcronym = "EN",
                            IsDeleted = false,
                            Species = "Panthera tigris sumatrae",
                            Taxonomy = "Animal, Mammal, Tiger",
                            UpdatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 371, DateTimeKind.Utc).AddTicks(7980)
                        },
                        new
                        {
                            Id = new Guid("87759b7e-f2cc-44eb-a87d-98de9b5bd087"),
                            AnimalName = "Tropical Frog",
                            CreatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 372, DateTimeKind.Utc).AddTicks(2829),
                            Habitat = "Bolivia",
                            IUCN = "Vulnerable",
                            IUCNAcronym = "VU",
                            IsDeleted = false,
                            Species = "Bolivian Tree Frog",
                            Taxonomy = "Animal, Amphibian, Frog",
                            UpdatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 372, DateTimeKind.Utc).AddTicks(2814)
                        },
                        new
                        {
                            Id = new Guid("41678cf9-bb3b-4a9f-976e-33b57a3af390"),
                            AnimalName = "Golden Eagle",
                            CreatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 372, DateTimeKind.Utc).AddTicks(2903),
                            Habitat = "Philipines",
                            IUCN = "Least Concerned",
                            IUCNAcronym = "LC",
                            IsDeleted = false,
                            Species = "Apanea Ittis",
                            Taxonomy = "Animal, Bird, Eagle",
                            UpdatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 372, DateTimeKind.Utc).AddTicks(2902)
                        },
                        new
                        {
                            Id = new Guid("8ac63722-756c-4822-90a1-75c5a2fd2a30"),
                            AnimalName = "Iberian Lynx",
                            CreatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 372, DateTimeKind.Utc).AddTicks(2911),
                            Habitat = "Iberian Peninsula",
                            IUCN = "Critically Endangered",
                            IUCNAcronym = "CR",
                            IsDeleted = false,
                            Species = "Lynx pardinus",
                            Taxonomy = "Animal, Mammal, Lynx",
                            UpdatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 372, DateTimeKind.Utc).AddTicks(2910)
                        });
                });

            modelBuilder.Entity("Animalink.Data.GeneralStatistic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Statistic")
                        .HasColumnType("varchar(8000)");

                    b.Property<string>("StatisticType")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GeneralStatistics");
                });

            modelBuilder.Entity("Animalink.Data.NftTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AnimalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Collection")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("ImageReference")
                        .HasColumnType("varchar(1000)");

                    b.Property<bool>("IsBurnable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTransferable")
                        .HasColumnType("bit");

                    b.Property<int>("MaxSupply")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NftType")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("NumberAvailable")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,8)");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Rarity")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("RarityLevel")
                        .HasColumnType("int");

                    b.Property<string>("Schema")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.ToTable("NftTemplates");

                    b.HasData(
                        new
                        {
                            Id = new Guid("effb4656-d469-4b2f-b28e-69918e61811f"),
                            AnimalId = new Guid("87759b7e-f2cc-44eb-a87d-98de9b5bd087"),
                            Collection = "Animalink",
                            CreatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 373, DateTimeKind.Utc).AddTicks(8709),
                            Description = "Its a frog",
                            ImageReference = "www.website.com",
                            IsBurnable = true,
                            IsDeleted = false,
                            IsPublished = true,
                            IsTransferable = true,
                            MaxSupply = 400,
                            Name = "Tropical Frog",
                            NftType = "Animal",
                            NumberAvailable = 57,
                            Price = 25m,
                            PublishedAt = new DateTime(2021, 5, 24, 9, 31, 9, 373, DateTimeKind.Utc).AddTicks(9335),
                            Rarity = "Rare",
                            RarityLevel = 3,
                            Schema = "South America",
                            UpdatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 373, DateTimeKind.Utc).AddTicks(8688)
                        },
                        new
                        {
                            Id = new Guid("032ead6e-6558-4b1f-8023-602d2aaa81f4"),
                            AnimalId = new Guid("41678cf9-bb3b-4a9f-976e-33b57a3af390"),
                            Collection = "Animalink",
                            CreatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 374, DateTimeKind.Utc).AddTicks(8463),
                            Description = "Its an eagle",
                            ImageReference = "www.website.com",
                            IsBurnable = true,
                            IsDeleted = false,
                            IsPublished = true,
                            IsTransferable = true,
                            MaxSupply = 1000,
                            Name = "Golden Eagle",
                            NftType = "Animal",
                            NumberAvailable = 250,
                            Price = 5m,
                            PublishedAt = new DateTime(2021, 5, 24, 9, 31, 9, 374, DateTimeKind.Utc).AddTicks(8486),
                            Rarity = "Common",
                            RarityLevel = 1,
                            Schema = "East Asia",
                            UpdatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 374, DateTimeKind.Utc).AddTicks(8457)
                        },
                        new
                        {
                            Id = new Guid("c85efa0e-3bae-4646-8024-76d75e3bd667"),
                            AnimalId = new Guid("a76492d7-f83b-465f-bbd6-de0338a284ab"),
                            Collection = "Animalink",
                            CreatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 374, DateTimeKind.Utc).AddTicks(8702),
                            Description = "Its a tiger",
                            ImageReference = "www.website.com",
                            IsBurnable = false,
                            IsDeleted = false,
                            IsPublished = true,
                            IsTransferable = true,
                            MaxSupply = 10,
                            Name = "Sumatran Tiger",
                            NftType = "Animal",
                            NumberAvailable = 0,
                            Price = 99m,
                            PublishedAt = new DateTime(2021, 5, 24, 9, 31, 9, 374, DateTimeKind.Utc).AddTicks(8704),
                            Rarity = "Super Rare",
                            RarityLevel = 4,
                            Schema = "East Asia",
                            UpdatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 374, DateTimeKind.Utc).AddTicks(8701)
                        },
                        new
                        {
                            Id = new Guid("da2b2abd-97c0-4dbb-9718-edf7a77e5b73"),
                            AnimalId = new Guid("8ac63722-756c-4822-90a1-75c5a2fd2a30"),
                            Collection = "Animalink",
                            CreatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 374, DateTimeKind.Utc).AddTicks(8713),
                            Description = "Its a Lynx",
                            ImageReference = "www.website.com",
                            IsBurnable = false,
                            IsDeleted = false,
                            IsPublished = false,
                            IsTransferable = true,
                            MaxSupply = 5,
                            Name = "Iberian Lynx",
                            NftType = "Animal",
                            NumberAvailable = 7,
                            Price = 120m,
                            PublishedAt = new DateTime(2021, 5, 24, 9, 31, 9, 374, DateTimeKind.Utc).AddTicks(8714),
                            Rarity = "Epic",
                            RarityLevel = 5,
                            Schema = "European",
                            UpdatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 374, DateTimeKind.Utc).AddTicks(8712)
                        },
                        new
                        {
                            Id = new Guid("c7e4da3a-f992-476e-a201-5cfe078c63d7"),
                            Collection = "Animalink",
                            CreatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 374, DateTimeKind.Utc).AddTicks(8735),
                            Description = "Celebrate Earth Day",
                            ImageReference = "www.website.com",
                            IsBurnable = false,
                            IsDeleted = false,
                            IsPublished = false,
                            IsTransferable = true,
                            MaxSupply = 5,
                            Name = "Earth Day",
                            NftType = "Event",
                            NumberAvailable = 28,
                            Price = 120m,
                            PublishedAt = new DateTime(2021, 5, 24, 9, 31, 9, 374, DateTimeKind.Utc).AddTicks(8736),
                            Rarity = "Special",
                            Schema = "Events",
                            UpdatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 374, DateTimeKind.Utc).AddTicks(8734)
                        });
                });

            modelBuilder.Entity("Animalink.Data.Partner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("ImageReference")
                        .HasColumnType("varchar(1000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PartnerName")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("WebsiteURL")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Partners");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5047731f-db7b-4af2-b423-1098380115a3"),
                            CreatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 374, DateTimeKind.Utc).AddTicks(9735),
                            Description = "A description of the place in question",
                            ImageReference = "link to the Partner logo",
                            IsDeleted = false,
                            PartnerName = "Zoo de Guarulhos, Brasil",
                            UpdatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 374, DateTimeKind.Utc).AddTicks(9729),
                            WebsiteURL = "www.site.com"
                        },
                        new
                        {
                            Id = new Guid("57cddcaf-c4ee-4a6c-82ef-db5f0eb108ce"),
                            CreatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 375, DateTimeKind.Utc).AddTicks(2158),
                            Description = "A description of the place in question",
                            ImageReference = "link to the Partner logo",
                            IsDeleted = false,
                            PartnerName = "Borneo Orangutan Rescue",
                            UpdatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 375, DateTimeKind.Utc).AddTicks(2153),
                            WebsiteURL = "www.site.com"
                        },
                        new
                        {
                            Id = new Guid("b4c2b214-2f0b-4b75-ae48-32185dd6a215"),
                            CreatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 375, DateTimeKind.Utc).AddTicks(2191),
                            Description = "A description of the place in question",
                            ImageReference = "link to the Partner logo",
                            IsDeleted = false,
                            PartnerName = "Iberian Lynx Conservation",
                            UpdatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 375, DateTimeKind.Utc).AddTicks(2190),
                            WebsiteURL = "www.site.com"
                        });
                });

            modelBuilder.Entity("Animalink.Data.Sale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MintNumber")
                        .HasColumnType("int");

                    b.Property<string>("NftName")
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("NftTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("SoldBy")
                        .HasColumnType("decimal(18,8)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("Animalink.Data.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageReference")
                        .HasColumnType("varchar(1000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("59ac08c7-e2ab-4804-ba0a-68cae6373490"),
                            CreatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 375, DateTimeKind.Utc).AddTicks(8670),
                            ImageReference = "image link",
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 375, DateTimeKind.Utc).AddTicks(8665),
                            UserName = "User1"
                        },
                        new
                        {
                            Id = new Guid("93ce26a3-6e6e-4349-988c-24eb83649e8f"),
                            CreatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 376, DateTimeKind.Utc).AddTicks(299),
                            ImageReference = "image link",
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 376, DateTimeKind.Utc).AddTicks(294),
                            UserName = "User2"
                        },
                        new
                        {
                            Id = new Guid("5909d779-a81a-4041-8570-c02f4d43c285"),
                            CreatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 376, DateTimeKind.Utc).AddTicks(326),
                            ImageReference = "image link",
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 376, DateTimeKind.Utc).AddTicks(325),
                            UserName = "User3"
                        },
                        new
                        {
                            Id = new Guid("4c2f9a94-68bc-4f2f-a238-cb9a63c6a259"),
                            CreatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 376, DateTimeKind.Utc).AddTicks(330),
                            ImageReference = "image link",
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 376, DateTimeKind.Utc).AddTicks(329),
                            UserName = "User4"
                        },
                        new
                        {
                            Id = new Guid("fd225a0f-4d78-4e98-b24c-7e3a35d3c967"),
                            CreatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 376, DateTimeKind.Utc).AddTicks(333),
                            ImageReference = "image link",
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2021, 5, 24, 9, 31, 9, 376, DateTimeKind.Utc).AddTicks(332),
                            UserName = "User5"
                        });
                });

            modelBuilder.Entity("Animalink.Data.UserStatistic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Statistic")
                        .HasColumnType("varchar(8000)");

                    b.Property<string>("StatisticType")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserStatistics");
                });

            modelBuilder.Entity("Animalink.Data.NftTemplate", b =>
                {
                    b.HasOne("Animalink.Data.Animal", null)
                        .WithMany("NftTemplates")
                        .HasForeignKey("AnimalId");
                });

            modelBuilder.Entity("Animalink.Data.Sale", b =>
                {
                    b.HasOne("Animalink.Data.User", null)
                        .WithMany("Sales")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
