// <auto-generated />
using System;
using Animalink.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Animalink.Data.Migrations
{
    [DbContext(typeof(AnimalinkDBContext))]
    partial class AnimalinkDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Animalink.Data.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e68353ea-91fb-4a2e-b29e-b75c10defa4f"),
                            CreatedAt = new DateTime(2021, 7, 2, 8, 4, 51, 417, DateTimeKind.Utc).AddTicks(3657),
                            IsDeleted = false,
                            Password = "123456",
                            UpdatedAt = new DateTime(2021, 7, 2, 8, 4, 51, 417, DateTimeKind.Utc).AddTicks(2947),
                            UserName = "Admin1"
                        });
                });

            modelBuilder.Entity("Animalink.Data.AdminStatistic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Statistic")
                        .HasColumnType("varchar(8000)");

                    b.Property<string>("StatisticType")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AdminStatistics");
                });

            modelBuilder.Entity("Animalink.Data.Animal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Habitat")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IUCN")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IUCNAcronym")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Species")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Taxonomy")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("Animalink.Data.Collection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("Animalink.Data.GeneralStatistic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Statistic")
                        .HasColumnType("varchar(8000)");

                    b.Property<string>("StatisticType")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GeneralStatistics");
                });

            modelBuilder.Entity("Animalink.Data.Partner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("ImageReference")
                        .HasColumnType("varchar(1000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("WebsiteURL")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Partners");
                });

            modelBuilder.Entity("Animalink.Data.Rarity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Rarities");
                });

            modelBuilder.Entity("Animalink.Data.Sale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MintNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("SoldBy")
                        .HasColumnType("decimal(18,8)");

                    b.Property<Guid>("TemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TemplateName")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("Animalink.Data.Schema", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Schemas");
                });

            modelBuilder.Entity("Animalink.Data.Template", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AnimalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AtomicAssetsId")
                        .HasColumnType("int");

                    b.Property<Guid>("CollectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(2000)");

                    b.Property<string>("ImageReference")
                        .HasColumnType("varchar(1000)");

                    b.Property<bool>("IsBurnable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTransferable")
                        .HasColumnType("bit");

                    b.Property<int>("MaxSupply")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("NumberAvailable")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,8)");

                    b.Property<DateTime?>("PublishedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RarityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SchemaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TemplateTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("CollectionId");

                    b.HasIndex("RarityId");

                    b.HasIndex("SchemaId");

                    b.HasIndex("TemplateTypeId");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("Animalink.Data.TemplateType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TemplateTypes");
                });

            modelBuilder.Entity("Animalink.Data.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageReference")
                        .HasColumnType("varchar(1000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8968e2cb-fd82-4035-8ff1-9bd9abe691e7"),
                            CreatedAt = new DateTime(2021, 7, 2, 8, 4, 51, 419, DateTimeKind.Utc).AddTicks(4917),
                            ImageReference = "image link",
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2021, 7, 2, 8, 4, 51, 419, DateTimeKind.Utc).AddTicks(4879),
                            UserName = "User1"
                        },
                        new
                        {
                            Id = new Guid("5cf1be60-cefd-49e5-9739-a6fa3d269117"),
                            CreatedAt = new DateTime(2021, 7, 2, 8, 4, 51, 419, DateTimeKind.Utc).AddTicks(6071),
                            ImageReference = "image link",
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2021, 7, 2, 8, 4, 51, 419, DateTimeKind.Utc).AddTicks(6067),
                            UserName = "User2"
                        },
                        new
                        {
                            Id = new Guid("80b79f7b-2d74-4838-9475-301389533336"),
                            CreatedAt = new DateTime(2021, 7, 2, 8, 4, 51, 419, DateTimeKind.Utc).AddTicks(6089),
                            ImageReference = "image link",
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2021, 7, 2, 8, 4, 51, 419, DateTimeKind.Utc).AddTicks(6088),
                            UserName = "User3"
                        },
                        new
                        {
                            Id = new Guid("0fbd6c03-1bd3-402d-8bd4-48425237d061"),
                            CreatedAt = new DateTime(2021, 7, 2, 8, 4, 51, 419, DateTimeKind.Utc).AddTicks(6092),
                            ImageReference = "image link",
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2021, 7, 2, 8, 4, 51, 419, DateTimeKind.Utc).AddTicks(6091),
                            UserName = "User4"
                        },
                        new
                        {
                            Id = new Guid("687a2177-ba49-48e6-af1d-267544d6dfba"),
                            CreatedAt = new DateTime(2021, 7, 2, 8, 4, 51, 419, DateTimeKind.Utc).AddTicks(6095),
                            ImageReference = "image link",
                            IsDeleted = false,
                            UpdatedAt = new DateTime(2021, 7, 2, 8, 4, 51, 419, DateTimeKind.Utc).AddTicks(6094),
                            UserName = "User5"
                        });
                });

            modelBuilder.Entity("Animalink.Data.UserStatistic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Statistic")
                        .HasColumnType("varchar(8000)");

                    b.Property<string>("StatisticType")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserStatistics");
                });

            modelBuilder.Entity("Animalink.Data.Sale", b =>
                {
                    b.HasOne("Animalink.Data.User", null)
                        .WithMany("Sales")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Animalink.Data.Template", b =>
                {
                    b.HasOne("Animalink.Data.Animal", null)
                        .WithMany("Templates")
                        .HasForeignKey("AnimalId");

                    b.HasOne("Animalink.Data.Collection", null)
                        .WithMany("Templates")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Animalink.Data.Rarity", null)
                        .WithMany("Templates")
                        .HasForeignKey("RarityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Animalink.Data.Schema", null)
                        .WithMany("Templates")
                        .HasForeignKey("SchemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Animalink.Data.TemplateType", null)
                        .WithMany("Templates")
                        .HasForeignKey("TemplateTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
